apply plugin: 'com.android.application'

// 编译时间
def buildTime = new Date().format("yyyy-MM-dd HH:mm", TimeZone.getTimeZone("GMT+8:00"))
// 版本号，每次升级+1
def versionCodeNum = 4
// 版本名
def versionMajor = 0
def versionMinor = 0
def versionPatch = 3

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion

    defaultConfig {
        applicationId "com.example.xushao.gradledemo"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode versionCodeNum.toInteger()
        versionName "${versionMajor}.${versionMinor}.${versionPatch}"
        // 写入自定义数据到BuildConfig类
        buildConfigField "String", "BUILD_TIME", "\"${buildTime}\""
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    productFlavors {
        flavors()

        localDebug {
            applicationId "com.example.xushao.gradledemo.local"
            versionCode 99
            versionName 'localDebug'
        }
    }

    productFlavors.all {
        flavor ->
            flavor.manifestPlaceholders = [market_channel: name];
            if (flavor.name.equals("localDebug")) {
                flavor.manifestPlaceholders = [market_channel: "localDebugChannel"]
            }
    }
}

def flavors() {
    def path = './channels.txt' // 渠道名
    file(path).eachLine {
        line ->
            if (!line.startsWith("//")) {
                // 动态创建productFlavor
                android.productFlavors.create(line, {
                    manifestPlaceholders = [market_channel: name]
                })
            }
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    testCompile 'junit:junit:4.12'

    compile project(':library_demo')

    compile "com.android.support:appcompat-v7:$rootProject.ext.supportLibraryVersion"
    compile "com.android.support:design:$rootProject.ext.supportLibraryVersion"
}
